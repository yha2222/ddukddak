<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xmlns:beans="http://www.springframework.org/schema/beans" 
xmlns:context="http://www.springframework.org/schema/context" 
xmlns:security="http://www.springframework.org/schema/security"
xmlns:websocket="http://www.springframework.org/schema/websocket" 
xsi:schemaLocation="http://www.springframework.org/schema/mvc 
http://www.springframework.org/schema/mvc/spring-mvc.xsd 
http://www.springframework.org/schema/beans 
http://www.springframework.org/schema/beans/spring-beans.xsd 
http://www.springframework.org/schema/context 
http://www.springframework.org/schema/context/spring-context.xsd 
http://www.springframework.org/schema/security 
http://www.springframework.org/schema/security/spring-security-4.2.xsd
http://www.springframework.org/schema/websocket http://www.springframework.org/schema/websocket/spring-websocket-4.3.xsd"
>

	<context:component-scan base-package="kr.or.dduk" >
        <context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Service"/>
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Repository"/>
	</context:component-scan>
	
	<annotation-driven />
	<!-- 서버에서 앞서 처리될 필요가 없는 정적 리소스 파일을 처리하는 역할 수행 -->
	<resources mapping="/resources/**" location="/resources/" />

	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
		<beans:property name="order" value="2" />
	</beans:bean>
	
	<!-- Tiles 설정 시작 -->
	<beans:bean id="tilesConfigurer" 
		class="org.springframework.web.servlet.view.tiles3.TilesConfigurer">
		<beans:property name="definitions">
			<beans:list>
				<beans:value>/WEB-INF/spring/tiles-config.xml</beans:value>
			</beans:list>
		</beans:property>
	</beans:bean>

	<beans:bean id="tilesViewResolver" 
		class="org.springframework.web.servlet.view.UrlBasedViewResolver">
		<beans:property name="viewClass" 
		value="org.springframework.web.servlet.view.tiles3.TilesView" />
		<beans:property name="order" value="1" />
	</beans:bean>
	<!-- Tiles 설정 끝 -->
	

	
	<!-- 스프링 시큐리티 애너테이션을 활성화
	 - pre-post-annotations="enabled" -> 골뱅이PreAuthorize, 골뱅이PostAuthorize 활성화
	   *** PreAuthorize : 특정 메소드를 실행하기 전에 role 체킹
	   PostAuthorize : 특정 메소드를 실행한 후에 role 체킹
	 - secured-annotations="enabled" -> 골뱅이Secured를 활성화
	   골뱅이Secured : 스프링 시큐리티 모듈을 지원하기 위한 애너테이션
	 -->
	 <security:global-method-security pre-post-annotations="enabled" 
	 	secured-annotations="enabled" />
	<!-- 소켓 핸들러 -->
	<beans:bean id="chattingHandler" class="kr.or.dduk.chat.controller.ChattingHandler"/>
	
 	<websocket:handlers>
	    <websocket:mapping handler="chattingHandler" path="/ddukddak/chat/**"/>
<!-- 	    <websocket:handshake-interceptors> -->
<!--            <beans:bean class="org.springframework.web.socket.server.support.HttpSessionHandshakeInterceptor"/> -->
<!--        </websocket:handshake-interceptors> -->
<!--        <websocket:sockjs/> -->
	</websocket:handlers>
	<!-- 소켓 핸들러 -->
</beans:beans>







