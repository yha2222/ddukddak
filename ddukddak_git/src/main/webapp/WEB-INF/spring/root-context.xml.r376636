<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mybatis-spring="http://mybatis.org/schema/mybatis-spring"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring-1.2.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.1.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.1.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.1.xsd">

	<!-- kr.or.dduk.aop 패키지를 컴포넌트 스캔 대상으로 등록 -->
	<context:component-scan base-package="kr.or.dduk">
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Service"/>
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Repository"/>
		<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
	</context:component-scan>
	
	<bean id="uploadFolder" class="java.lang.String">
		<constructor-arg value="C:\finalProj\workspace\ddukddak\src\main\webapp\resources\upload"></constructor-arg>
	</bean>
	 
	<bean id="dataSource"
		class="org.apache.commons.dbcp2.BasicDataSource">
		<!--  <property name="driverClassName"
			value="oracle.jdbc.driver.OracleDriver"></property>
		<property name="url"
			value="jdbc:oracle:thin:@112.220.114.130:1521:xe"></property>-->
		<property name="driverClassName"
			value="net.sf.log4jdbc.sql.jdbcapi.DriverSpy"></property>
		<property name="url"
			value="jdbc:log4jdbc:oracle:thin:@112.220.114.130:1521:xe"></property>
			
		<property name="username" value="team2_202306F"></property>
		<property name="password" value="java"></property>
		
		<property name="initialSize" value="2" /> 
		<property name="maxTotal" value="3" />  
	</bean>
	
	<!-- 데이터베이스와 연결을 맺고 끊어질 때까지의 
	라이프 사이클을 관리해주는 sqlSession 객체를 생성
	1) dataSource
	2) 매퍼 xml의 위치 지정. / : src/main/resources/
	 -->
	<bean id="sqlSessionFactory"
	class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource"></property>
		<property name="mapperLocations"
		value="classpath:/sqlmap/**/*_SQL.xml" />
		<property name="configLocation"
		 value="/WEB-INF/mybatisAlias/mybatisAlias.xml" />
	</bean>
	<!-- 데이터베이스에 개별적으로 쿼리를 실행시키는 객체.
		이 객체를 통해 query를 실행함
	 -->
	<bean id="sqlSessionTemplate"
	class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg index="0" ref="sqlSessionFactory" />
	</bean>
	
	<!-- 파일업로드 설정
	CommonsMultipartResolver multipartResolver = new multipartResolver();
	multipartResolver.setMaxUploadSize(10485760);
	multipartResolver.setDefaultEncoding("UTF-8");
	 -->
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<!-- 파일업로드 용량 (20MB)-->
		<property name="maxUploadSize" value="20971520"/>
		<property name="defaultEncoding" value="UTF-8" />
	</bean>
	
	<!-- 파일업로드 디렉토리 설정 -->
	<bean id="uploadPath" class="java.lang.String">
		<constructor-arg value="c:\\upload"/>
	</bean>
	
	<!-- 트랜잭션 관리자의 빈을 정의 -->
	<bean id="transactionManager" 
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"></property>
	</bean>
	
	
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="*" rollback-for="Exception"/>
		</tx:attributes>
	</tx:advice>
    
	<aop:config>
		<aop:pointcut id="requiredTx" expression="execution(* kr.or.dduk..impl.*Impl.*(..))"/>
		<aop:advisor advice-ref="txAdvice" pointcut-ref="requiredTx" />
	</aop:config>
	
	<!-- 애너테이션 기반의 트랜잭션 제어를 활성화함, aop -->
	<tx:annotation-driven/>
	
	<!-- Mapper 설정-->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="kr.or.dduk.mapper" />
	</bean>
	
	<!-- 스프링 AOP 활성화 -->
	<aop:aspectj-autoproxy></aop:aspectj-autoproxy>

</beans>